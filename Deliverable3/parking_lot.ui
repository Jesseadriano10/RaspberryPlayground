<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>MainWindow</class>
 <widget class="QMainWindow" name="MainWindow">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>1201</width>
    <height>961</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>MainWindow</string>
  </property>
  <property name="layoutDirection">
   <enum>Qt::LeftToRight</enum>
  </property>
  <widget class="QWidget" name="centralwidget">
   <property name="enabled">
    <bool>true</bool>
   </property>
   <layout class="QGridLayout" name="gridLayout_2">
    <item row="1" column="0">
     <layout class="QGridLayout" name="gridLayout">
      <item row="0" column="0">
       <widget class="QPushButton" name="warningLightOnButton">
        <property name="sizePolicy">
         <sizepolicy hsizetype="Maximum" vsizetype="Maximum">
          <horstretch>0</horstretch>
          <verstretch>0</verstretch>
         </sizepolicy>
        </property>
        <property name="maximumSize">
         <size>
          <width>100</width>
          <height>100</height>
         </size>
        </property>
        <property name="styleSheet">
         <string notr="true">QPushButton {
    color: #333;
    border: 2px solid #555;
    border-radius: 20px;
    border-style: outset;
    background: qradialgradient(
        cx: 0.3, cy: -0.4, fx: 0.3, fy: -0.4,
        radius: 1.35, stop: 0 #60ff9b, stop: 1 #008840
        );
    padding: 5px;
}

QPushButton:hover {
    background: qradialgradient(
        cx: 0.3, cy: -0.4, fx: 0.3, fy: -0.4,
        radius: 1.35, stop: 0 #8cffbd, stop: 1 #33bb77
        );
}

QPushButton:pressed {
    border-style: inset;
    background: qradialgradient(
        cx: 0.4, cy: -0.1, fx: 0.4, fy: -0.1,
        radius: 1.35, stop: 0 #50cc91, stop: 1 #006633
        );
}
</string>
        </property>
        <property name="text">
         <string>WARN ON</string>
        </property>
       </widget>
      </item>
      <item row="1" column="0">
       <widget class="QPushButton" name="warninLightOffButton">
        <property name="sizePolicy">
         <sizepolicy hsizetype="Maximum" vsizetype="Maximum">
          <horstretch>0</horstretch>
          <verstretch>0</verstretch>
         </sizepolicy>
        </property>
        <property name="maximumSize">
         <size>
          <width>100</width>
          <height>100</height>
         </size>
        </property>
        <property name="styleSheet">
         <string notr="true">QPushButton {
    color: #fff;
    border: 2px solid #555;
    border-radius: 20px;
    border-style: outset;
    background: qradialgradient(
        cx: 0.3, cy: -0.4, fx: 0.3, fy: -0.4,
        radius: 1.35, stop: 0 #ff6861, stop: 1 #880000
        );
    padding: 5px;
}

QPushButton:hover {
    background: qradialgradient(
        cx: 0.3, cy: -0.4, fx: 0.3, fy: -0.4,
        radius: 1.35, stop: 0 #ff9b93, stop: 1 #bb3333
        );
}

QPushButton:pressed {
    border-style: inset;
    background: qradialgradient(
        cx: 0.4, cy: -0.1, fx: 0.4, fy: -0.1,
        radius: 1.35, stop: 0 #d85752, stop: 1 #660000
        );
}</string>
        </property>
        <property name="text">
         <string>WARN OFF</string>
        </property>
       </widget>
      </item>
     </layout>
    </item>
    <item row="0" column="0" colspan="2">
     <layout class="QHBoxLayout" name="horizontalLayout">
      <item>
       <widget class="QGroupBox" name="ParkingIndicator1">
        <property name="sizePolicy">
         <sizepolicy hsizetype="Preferred" vsizetype="Preferred">
          <horstretch>0</horstretch>
          <verstretch>0</verstretch>
         </sizepolicy>
        </property>
        <property name="minimumSize">
         <size>
          <width>50</width>
          <height>150</height>
         </size>
        </property>
        <property name="maximumSize">
         <size>
          <width>150</width>
          <height>300</height>
         </size>
        </property>
        <property name="title">
         <string>ParkingIndicator1</string>
        </property>
        <property name="alignment">
         <set>Qt::AlignHCenter|Qt::AlignTop</set>
        </property>
        <widget class="QPushButton" name="parkingIndicator">
         <property name="geometry">
          <rect>
           <x>4</x>
           <y>20</y>
           <width>141</width>
           <height>271</height>
          </rect>
         </property>
         <property name="styleSheet">
          <string notr="true">QPushButton {
    color: #000;
    border: 2px solid #555;
    border-radius: 15px;
    border-style: outset;
    padding: 5px;
    font-weight: bold;
    font-size: 14px;
    min-width: 40px;
    min-height: 40px;
}

/* Default look for the button */
QPushButton.parkingIndicator {
    background: #f0f0f0;
}

/* Look for the button when a parking spot is available */
QPushButton.parkingIndicator[status=&quot;available&quot;] {
    background: qradialgradient(
        cx: 0.5, cy: 0.5, fx: 0.5, fy: 0.5,
        radius: 1.35, stop: 0 #8fff9b, stop: 1 #008040
        );
}

/* Look for the button when a parking spot is occupied */
QPushButton.parkingIndicator[status=&quot;occupied&quot;] {
    background: qradialgradient(
        cx: 0.5, cy: 0.5, fx: 0.5, fy: 0.5,
        radius: 1.35, stop: 0 #ff8f8f, stop: 1 #880000
        );
}

QPushButton.parkingIndicator:hover {
    border-color: #666;
}

QPushButton.parkingIndicator:pressed {
    border-style: inset;
}
</string>
         </property>
         <property name="text">
          <string>SPOT 1</string>
         </property>
         <property name="checkable">
          <bool>true</bool>
         </property>
        </widget>
       </widget>
      </item>
      <item>
       <widget class="QGroupBox" name="ParkingIndicator2">
        <property name="sizePolicy">
         <sizepolicy hsizetype="Preferred" vsizetype="Preferred">
          <horstretch>0</horstretch>
          <verstretch>0</verstretch>
         </sizepolicy>
        </property>
        <property name="minimumSize">
         <size>
          <width>50</width>
          <height>150</height>
         </size>
        </property>
        <property name="maximumSize">
         <size>
          <width>150</width>
          <height>300</height>
         </size>
        </property>
        <property name="title">
         <string>ParkingIndicator2</string>
        </property>
        <property name="alignment">
         <set>Qt::AlignHCenter|Qt::AlignTop</set>
        </property>
        <widget class="QPushButton" name="parkingIndicator2">
         <property name="geometry">
          <rect>
           <x>4</x>
           <y>20</y>
           <width>141</width>
           <height>271</height>
          </rect>
         </property>
         <property name="styleSheet">
          <string notr="true">QPushButton {
    color: #000;
    border: 2px solid #555;
    border-radius: 15px;
    border-style: outset;
    padding: 5px;
    font-weight: bold;
    font-size: 14px;
    min-width: 40px;
    min-height: 40px;
}

/* Default look for the button */
QPushButton.parkingIndicator {
    background: #f0f0f0;
}

/* Look for the button when a parking spot is available */
QPushButton.parkingIndicator[status=&quot;available&quot;] {
    background: qradialgradient(
        cx: 0.5, cy: 0.5, fx: 0.5, fy: 0.5,
        radius: 1.35, stop: 0 #8fff9b, stop: 1 #008040
        );
}

/* Look for the button when a parking spot is occupied */
QPushButton.parkingIndicator[status=&quot;occupied&quot;] {
    background: qradialgradient(
        cx: 0.5, cy: 0.5, fx: 0.5, fy: 0.5,
        radius: 1.35, stop: 0 #ff8f8f, stop: 1 #880000
        );
}

QPushButton.parkingIndicator:hover {
    border-color: #666;
}

QPushButton.parkingIndicator:pressed {
    border-style: inset;
}
</string>
         </property>
         <property name="text">
          <string>SPOT 2</string>
         </property>
         <property name="checkable">
          <bool>true</bool>
         </property>
        </widget>
       </widget>
      </item>
      <item>
       <widget class="QGroupBox" name="ParkingIndicator3">
        <property name="sizePolicy">
         <sizepolicy hsizetype="Preferred" vsizetype="Preferred">
          <horstretch>0</horstretch>
          <verstretch>0</verstretch>
         </sizepolicy>
        </property>
        <property name="minimumSize">
         <size>
          <width>50</width>
          <height>150</height>
         </size>
        </property>
        <property name="maximumSize">
         <size>
          <width>150</width>
          <height>300</height>
         </size>
        </property>
        <property name="title">
         <string>ParkingIndicator3</string>
        </property>
        <property name="alignment">
         <set>Qt::AlignHCenter|Qt::AlignTop</set>
        </property>
        <widget class="QPushButton" name="parkingIndicator3">
         <property name="geometry">
          <rect>
           <x>4</x>
           <y>20</y>
           <width>141</width>
           <height>271</height>
          </rect>
         </property>
         <property name="styleSheet">
          <string notr="true">QPushButton {
    color: #333;
    border: 2px solid #555;
    border-radius: 15px;
    border-style: outset;
    padding: 5px;
    font-weight: bold;
    font-size: 14px;
    min-width: 40px;
    min-height: 40px;
}

/* Default look for the button */
QPushButton.parkingIndicator {
    background: #f0f0f0;
}

/* Look for the button when a parking spot is available */
QPushButton.parkingIndicator[status=&quot;available&quot;] {
    background: qradialgradient(
        cx: 0.5, cy: 0.5, fx: 0.5, fy: 0.5,
        radius: 1.35, stop: 0 #8fff9b, stop: 1 #008040
        );
}

/* Look for the button when a parking spot is occupied */
QPushButton.parkingIndicator[status=&quot;occupied&quot;] {
    background: qradialgradient(
        cx: 0.5, cy: 0.5, fx: 0.5, fy: 0.5,
        radius: 1.35, stop: 0 #ff8f8f, stop: 1 #880000
        );
}

QPushButton.parkingIndicator:hover {
    border-color: #666;
}

QPushButton.parkingIndicator:pressed {
    border-style: inset;
}
</string>
         </property>
         <property name="text">
          <string>SPOT 3</string>
         </property>
         <property name="checkable">
          <bool>true</bool>
         </property>
        </widget>
       </widget>
      </item>
      <item>
       <widget class="QGroupBox" name="ParkingIndicator4">
        <property name="sizePolicy">
         <sizepolicy hsizetype="Preferred" vsizetype="Preferred">
          <horstretch>0</horstretch>
          <verstretch>0</verstretch>
         </sizepolicy>
        </property>
        <property name="minimumSize">
         <size>
          <width>50</width>
          <height>150</height>
         </size>
        </property>
        <property name="maximumSize">
         <size>
          <width>150</width>
          <height>300</height>
         </size>
        </property>
        <property name="title">
         <string>ParkingIndicator4</string>
        </property>
        <property name="alignment">
         <set>Qt::AlignHCenter|Qt::AlignTop</set>
        </property>
        <widget class="QPushButton" name="parkingIndicator4">
         <property name="geometry">
          <rect>
           <x>4</x>
           <y>20</y>
           <width>141</width>
           <height>271</height>
          </rect>
         </property>
         <property name="styleSheet">
          <string notr="true">QPushButton {
    color: #333;
    border: 2px solid #555;
    border-radius: 15px;
    border-style: outset;
    padding: 5px;
    font-weight: bold;
    font-size: 14px;
    min-width: 40px;
    min-height: 40px;
}

/* Default look for the button */
QPushButton.parkingIndicator {
    background: #f0f0f0;
}

/* Look for the button when a parking spot is available */
QPushButton.parkingIndicator[status=&quot;available&quot;] {
    background: qradialgradient(
        cx: 0.5, cy: 0.5, fx: 0.5, fy: 0.5,
        radius: 1.35, stop: 0 #8fff9b, stop: 1 #008040
        );
}

/* Look for the button when a parking spot is occupied */
QPushButton.parkingIndicator[status=&quot;occupied&quot;] {
    background: qradialgradient(
        cx: 0.5, cy: 0.5, fx: 0.5, fy: 0.5,
        radius: 1.35, stop: 0 #ff8f8f, stop: 1 #880000
        );
}

QPushButton.parkingIndicator:hover {
    border-color: #666;
}

QPushButton.parkingIndicator:pressed {
    border-style: inset;
}
</string>
         </property>
         <property name="text">
          <string>SPOT 4</string>
         </property>
         <property name="checkable">
          <bool>true</bool>
         </property>
        </widget>
       </widget>
      </item>
      <item>
       <widget class="QGroupBox" name="ParkingIndicator5">
        <property name="sizePolicy">
         <sizepolicy hsizetype="Preferred" vsizetype="Preferred">
          <horstretch>0</horstretch>
          <verstretch>0</verstretch>
         </sizepolicy>
        </property>
        <property name="minimumSize">
         <size>
          <width>50</width>
          <height>150</height>
         </size>
        </property>
        <property name="maximumSize">
         <size>
          <width>150</width>
          <height>300</height>
         </size>
        </property>
        <property name="title">
         <string>ParkingIndicator5</string>
        </property>
        <property name="alignment">
         <set>Qt::AlignHCenter|Qt::AlignTop</set>
        </property>
        <widget class="QPushButton" name="parkingIndicator5">
         <property name="geometry">
          <rect>
           <x>4</x>
           <y>20</y>
           <width>141</width>
           <height>271</height>
          </rect>
         </property>
         <property name="styleSheet">
          <string notr="true">QPushButton {
    color: #333;
    border: 2px solid #555;
    border-radius: 15px;
    border-style: outset;
    padding: 5px;
    font-weight: bold;
    font-size: 14px;
    min-width: 40px;
    min-height: 40px;
}

/* Default look for the button */
QPushButton.parkingIndicator {
    background: #f0f0f0;
}

/* Look for the button when a parking spot is available */
QPushButton.parkingIndicator[status=&quot;available&quot;] {
    background: qradialgradient(
        cx: 0.5, cy: 0.5, fx: 0.5, fy: 0.5,
        radius: 1.35, stop: 0 #8fff9b, stop: 1 #008040
        );
}

/* Look for the button when a parking spot is occupied */
QPushButton.parkingIndicator[status=&quot;occupied&quot;] {
    background: qradialgradient(
        cx: 0.5, cy: 0.5, fx: 0.5, fy: 0.5,
        radius: 1.35, stop: 0 #ff8f8f, stop: 1 #880000
        );
}

QPushButton.parkingIndicator:hover {
    border-color: #666;
}

QPushButton.parkingIndicator:pressed {
    border-style: inset;
}
</string>
         </property>
         <property name="text">
          <string>SPOT 5</string>
         </property>
         <property name="checkable">
          <bool>true</bool>
         </property>
        </widget>
       </widget>
      </item>
     </layout>
    </item>
    <item row="1" column="1">
     <layout class="QVBoxLayout" name="verticalLayout">
      <property name="spacing">
       <number>0</number>
      </property>
      <item>
       <widget class="QGroupBox" name="groupBox">
        <property name="sizePolicy">
         <sizepolicy hsizetype="MinimumExpanding" vsizetype="Preferred">
          <horstretch>0</horstretch>
          <verstretch>0</verstretch>
         </sizepolicy>
        </property>
        <property name="maximumSize">
         <size>
          <width>16777215</width>
          <height>600</height>
         </size>
        </property>
        <property name="title">
         <string>GroupBox</string>
        </property>
        <widget class="QPushButton" name="sendMessageButton">
         <property name="geometry">
          <rect>
           <x>910</x>
           <y>300</y>
           <width>61</width>
           <height>31</height>
          </rect>
         </property>
         <property name="sizePolicy">
          <sizepolicy hsizetype="MinimumExpanding" vsizetype="Preferred">
           <horstretch>0</horstretch>
           <verstretch>0</verstretch>
          </sizepolicy>
         </property>
         <property name="maximumSize">
          <size>
           <width>100</width>
           <height>50</height>
          </size>
         </property>
         <property name="layoutDirection">
          <enum>Qt::RightToLeft</enum>
         </property>
         <property name="styleSheet">
          <string notr="true">QGroupBox {
    border: 2px solid #555;
    border-radius: 5px;
    margin-top: 1em;
}

QLabel#sensorDisplay {
    border: none; /* Remove the border if enclosed in a QGroupBox */
    background-color: #fff;
    padding: 8px;
    font: 14px;
}

QTextEdit#messageInput {
    border: 2px solid #555;
    border-radius: 5px;
    padding: 8px;
    font: 14px;
}

QPushButton#sendMessageButton {
    border: 2px solid #555;
    border-radius: 5px;
    padding: 8px;
    font: 14px;
    background-color: #a0a0a0;
    margin-left: 8px; /* Add some space between the text input and the button */
}

/* Ensure the button doesn't grow disproportionately */
QPushButton#sendMessageButton:fixed-size {
    width: 80px;
    height: 40px;
}
</string>
         </property>
         <property name="text">
          <string>Send</string>
         </property>
        </widget>
        <widget class="QTextEdit" name="displayBoard">
         <property name="geometry">
          <rect>
           <x>10</x>
           <y>10</y>
           <width>901</width>
           <height>291</height>
          </rect>
         </property>
         <property name="sizePolicy">
          <sizepolicy hsizetype="MinimumExpanding" vsizetype="Preferred">
           <horstretch>0</horstretch>
           <verstretch>0</verstretch>
          </sizepolicy>
         </property>
         <property name="maximumSize">
          <size>
           <width>1000</width>
           <height>500</height>
          </size>
         </property>
         <property name="focusPolicy">
          <enum>Qt::StrongFocus</enum>
         </property>
         <property name="contextMenuPolicy">
          <enum>Qt::DefaultContextMenu</enum>
         </property>
         <property name="statusTip">
          <string/>
         </property>
         <property name="autoFillBackground">
          <bool>false</bool>
         </property>
         <property name="styleSheet">
          <string notr="true">QGroupBox {
    border: 2px solid #555;
    border-radius: 5px;
    margin-top: 1em;
}

QLabel#sensorDisplay {
    border: none; /* Remove the border if enclosed in a QGroupBox */
    background-color: #fff;
    padding: 8px;
    font: 14px;
}

QTextEdit#messageInput {
    border: 2px solid #555;
    border-radius: 5px;
    padding: 8px;
    font: 14px;
}

QPushButton#sendMessageButton {
    border: 2px solid #555;
    border-radius: 5px;
    padding: 8px;
    font: 14px;
    background-color: #a0a0a0;
    margin-left: 8px; /* Add some space between the text input and the button */
}

/* Ensure the button doesn't grow disproportionately */
QPushButton#sendMessageButton:fixed-size {
    width: 80px;
    height: 40px;
}
</string>
         </property>
         <property name="frameShape">
          <enum>QFrame::StyledPanel</enum>
         </property>
         <property name="frameShadow">
          <enum>QFrame::Sunken</enum>
         </property>
         <property name="readOnly">
          <bool>true</bool>
         </property>
         <property name="html">
          <string>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;
&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
p, li { white-space: pre-wrap; }
&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'Cantarell'; font-size:11pt; font-weight:400; font-style:normal;&quot;&gt;
&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:'MS Shell Dlg 2'; font-size:14px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
         </property>
        </widget>
        <widget class="QLineEdit" name="messageInput">
         <property name="geometry">
          <rect>
           <x>10</x>
           <y>300</y>
           <width>901</width>
           <height>31</height>
          </rect>
         </property>
         <property name="styleSheet">
          <string notr="true">background-color: rgb(193, 193, 193);
font: 12pt &quot;Consolas&quot;;
color: rgb(0, 0, 0);</string>
         </property>
         <property name="text">
          <string/>
         </property>
         <property name="placeholderText">
          <string>Enter Text Here: </string>
         </property>
        </widget>
        <zorder>displayBoard</zorder>
        <zorder>sendMessageButton</zorder>
        <zorder>messageInput</zorder>
       </widget>
      </item>
      <item>
       <widget class="QLabel" name="sensorDisplay">
        <property name="sizePolicy">
         <sizepolicy hsizetype="MinimumExpanding" vsizetype="Preferred">
          <horstretch>0</horstretch>
          <verstretch>0</verstretch>
         </sizepolicy>
        </property>
        <property name="maximumSize">
         <size>
          <width>800</width>
          <height>100</height>
         </size>
        </property>
        <property name="layoutDirection">
         <enum>Qt::LeftToRight</enum>
        </property>
        <property name="styleSheet">
         <string notr="true">QGroupBox {
    border: 2px solid #555;
    border-radius: 5px;
    margin-top: 1em;
}

QLabel#sensorDisplay {
    border: none; /* Remove the border if enclosed in a QGroupBox */
    background-color: #fff;
    padding: 8px;
    font: 14px;
}

QTextEdit#messageInput {
    border: 2px solid #555;
    border-radius: 5px;
    padding: 8px;
    font: 14px;
}

QPushButton#sendMessageButton {
    border: 2px solid #555;
    border-radius: 5px;
    padding: 8px;
    font: 14px;
    background-color: #a0a0a0;
    margin-left: 8px; /* Add some space between the text input and the button */
}

/* Ensure the button doesn't grow disproportionately */
QPushButton#sendMessageButton:fixed-size {
    width: 80px;
    height: 40px;
}
</string>
        </property>
        <property name="text">
         <string>Sensor Data:</string>
        </property>
        <property name="textFormat">
         <enum>Qt::RichText</enum>
        </property>
        <property name="alignment">
         <set>Qt::AlignLeading|Qt::AlignLeft|Qt::AlignTop</set>
        </property>
       </widget>
      </item>
     </layout>
    </item>
   </layout>
  </widget>
  <widget class="QMenuBar" name="menubar">
   <property name="geometry">
    <rect>
     <x>0</x>
     <y>0</y>
     <width>1201</width>
     <height>30</height>
    </rect>
   </property>
  </widget>
  <widget class="QStatusBar" name="statusbar"/>
 </widget>
 <resources/>
 <connections/>
</ui>
